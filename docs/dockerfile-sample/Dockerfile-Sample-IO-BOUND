# =========================
# 1) Build stage
# =========================
FROM python:3.12-slim AS builder

ENV POETRY_VERSION=1.8.3 \
    PYTHONUNBUFFERED=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential libpq-dev \
    && rm -rf /var/lib/apt/lists/*

RUN pip install --no-cache-dir "poetry==$POETRY_VERSION"

WORKDIR /app
COPY pyproject.toml poetry.lock ./
RUN poetry config virtualenvs.create false \
 && poetry install --without dev --no-interaction --no-ansi

COPY src ./src

# =========================
# 2) Runtime stage
# =========================
FROM python:3.12-slim AS runtime

ENV PYTHONUNBUFFERED=1 TZ=America/Sao_Paulo

RUN apt-get update && apt-get install -y --no-install-recommends curl \
  && rm -rf /var/lib/apt/lists/*

RUN useradd -m fastapiuser
USER fastapiuser
WORKDIR /app

COPY --from=builder /app /app

EXPOSE 8000

HEALTHCHECK --interval=30s --timeout=3s --start-period=20s --retries=3 \
  CMD curl -fsS http://127.0.0.1:8000/health || exit 1

# Instala gunicorn + uvicorn[standard] no runtime
USER root
RUN pip install --no-cache-dir "gunicorn>=21" "uvicorn[standard]"
USER fastapiuser

# CMD dinâmico (workers ≈ 2×CPUs, teto opcional via MAX_WORKERS)
ENV MAX_WORKERS=8
CMD /bin/sh -c '\
  detect_cpus() { \
    if [ -f /sys/fs/cgroup/cpu.max ]; then \
      read Q P < /sys/fs/cgroup/cpu.max; \
      [ "$Q" = "max" ] && nproc || awk -v q=$Q -v p=$P "BEGIN{print int((q+p-1)/p)}"; \
    else \
      Q=$(cat /sys/fs/cgroup/cpu/cpu.cfs_quota_us 2>/dev/null || echo -1); \
      P=$(cat /sys/fs/cgroup/cpu/cpu.cfs_period_us 2>/dev/null || echo -1); \
      [ $Q -gt 0 -a $P -gt 0 ] && awk -v q=$Q -v p=$P "BEGIN{print int((q+p-1)/p)}" || nproc; \
    fi; \
  }; \
  CPUS=$(detect_cpus); [ "$CPUS" -lt 1 ] && CPUS=1; \
  W=${WEB_CONCURRENCY:-$((CPUS * 2))}; \
  [ "$MAX_WORKERS" -gt 0 ] && [ "$W" -gt "$MAX_WORKERS" ] && W=$MAX_WORKERS; \
  exec gunicorn -k uvicorn.workers.UvicornWorker src.main:app \
    -w "$W" -b 0.0.0.0:8000 \
    --access-logfile - --error-logfile - \
    --keep-alive 10 --timeout 30 \
'
